<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DailyDrawResult</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">
    <style>
        * {
            font-family: 'Poppins', sans-serif;
        }

        /* Remove default tap highlight on mobile for all elements */
        * {
            -webkit-tap-highlight-color: transparent;
        }

        body {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            min-height: 100vh;
        }

        .app-header {
            background: linear-gradient(135deg, #FF6B6B 0%, #6A82FB 50%, #45EBA5 100%);
            background-size: 300% 300%;
            animation: gradientShift 6s ease infinite;
        }

        @keyframes gradientShift {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        .card-expand {
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            transform-origin: top;
        }

        .card-expand.expanded {
            transform: scaleY(1);
            opacity: 1;
            max-height: 800px;
        }

        .card-expand.collapsed {
            transform: scaleY(0);
            opacity: 0;
            max-height: 0;
            overflow: hidden;
        }

        .lottery-card {
            border-radius: 20px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            min-height: 44px;
            padding: 28px !important;
        }

        .lottery-card::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            width: 6px;
            height: 100%;
            border-radius: 20px 0 0 20px;
        }

        .lottery-card:active {
            transform: scale(0.98);
        }

        .lottery-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

        .kerala-card {
            background: linear-gradient(135deg, #FF6B6B 0%, #FF8E8E 100%);
        }

        .kerala-card::before {
            background: #FF4444;
        }

        .maharashtra-card {
            background: linear-gradient(135deg, #6A82FB 0%, #8FA8FF 100%);
        }

        .maharashtra-card::before {
            background: #4263EB;
        }

        .punjab-card {
            background: linear-gradient(135deg, #45EBA5 0%, #6BFFB8 100%);
        }

        .punjab-card::before {
            background: #20C997;
        }

        .upcoming-card-1 {
            background: linear-gradient(135deg, #FFC93C 0%, #FFD666 100%);
        }

        .upcoming-card-1::before {
            background: #FFB020;
        }

        .upcoming-card-2 {
            background: linear-gradient(135deg, #A855F7 0%, #C084FC 100%);
        }

        .upcoming-card-2::before {
            background: #9333EA;
        }

        .upcoming-card-3 {
            background: linear-gradient(135deg, #EC4899 0%, #F472B6 100%);
        }

        .upcoming-card-3::before {
            background: #DB2777;
        }

        .upcoming-card-4 {
            background: linear-gradient(135deg, #3B82F6 0%, #60A5FA 100%);
        }

        .upcoming-card-4::before {
            background: #2563EB;
        }

        .upcoming-card-5 {
            background: linear-gradient(135deg, #10B981 0%, #34D399 100%);
        }

        .upcoming-card-5::before {
            background: #059669;
        }

        .upcoming-card-6 {
            background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
        }

        .upcoming-card-6::before {
            background: #D97706;
        }

        .upcoming-card-7 {
            background: linear-gradient(135deg, #6366F1 0%, #818CF8 100%);
        }

        .upcoming-card-7::before {
            background: #4F46E5;
        }

        /* .past-card {
            background: linear-gradient(135deg, #64748B 0%, #94A3B8 100%);
        }

        .past-card::before {
            background: #475569;
        } */

        .past-card1 {
            background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
        }

        .past-card1::before {
            background: #D97706;
        }

        .past-card2 {
            background: linear-gradient(135deg, #10B981 0%, #34D399 100%);
        }

        .past-card2::before {
            background: #059669;
        }

        .past-card3 {
            background: linear-gradient(135deg, #6366F1 0%, #818CF8 100%);
        }

        .past-card3::before {
            background: #4F46E5;
        }

        .past-card4 {
            background: linear-gradient(135deg, #EC4899 0%, #F472B6 100%);
        }

        .past-card4::before {
            background: #DB2777;
        }

        .past-card5 {
            background: linear-gradient(135deg, #A855F7 0%, #C084FC 100%);
        }

        .past-card5::before {
            background: #9333EA;
        }

        .past-card6 {
            background: linear-gradient(135deg, #FFC93C 0%, #FFD666 100%);
        }

        .past-card6::before {
            background: #FFB020;
        }

        /*  Past Card styles for each day*/
        /* Sunday - Vibrant Red/Pink */
        .Sunday-card {
            background: linear-gradient(135deg, #F43F5E 0%, #FB7185 100%);
        }

        .Sunday-card::before {
            background: #E11D48;
        }

        /* Monday - Royal Purple */
        .Monday-card {
            background: linear-gradient(135deg, #A855F7 0%, #C084FC 100%);
        }

        .Monday-card::before {
            background: #9333EA;
        }

        /* Tuesday - Energetic Orange */
        .Tuesday-card {
            background: linear-gradient(135deg, #F97316 0%, #FB923C 100%);
        }

        .Tuesday-card::before {
            background: #EA580C;
        }

        /* Wednesday - Fresh Green */
        .Wednesday-card {
            background: linear-gradient(135deg, #22C55E 0%, #4ADE80 100%);
        }

        .Wednesday-card::before {
            background: #16A34A;
        }

        /* Thursday - Deep Blue */
        .Thursday-card {
            background: linear-gradient(135deg, #3B82F6 0%, #60A5FA 100%);
        }

        .Thursday-card::before {
            background: #2563EB;
        }

        /* Friday - Playful Pink */
        .Friday-card {
            background: linear-gradient(135deg, #EC4899 0%, #F472B6 100%);
        }

        .Friday-card::before {
            background: #DB2777;
        }

        /* Saturday - Sunny Yellow */
        .Saturday-card {
            background: linear-gradient(135deg, #EAB308 0%, #FACC15 100%);
        }

        .Saturday-card::before {
            background: #CA8A04;
        }

        /*  */
        .countdown-badge {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 12px;
            color: white;
            font-weight: 800;
            min-width: 50px;
            min-height: 50px;
            font-family: 'Courier New', monospace;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
            font-size: 1.1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .prize-badge {
            background: linear-gradient(45deg, #ffd700, #ffed4a);
            color: #744210;
            font-weight: 700;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(255, 215, 0, 0.3);
        }

        .live-badge {
            background: linear-gradient(45deg, #10B981, #34D399);
            color: white;
            animation: pulse 2s infinite;
            font-size: 0.875rem;
            font-weight: 800;
            padding: 6px 12px;
        }


        .result-badge {
            background: linear-gradient(45deg, #3B82F6, #60A5FA);
            color: white;
            font-size: 0.875rem;
            font-weight: 800;
            padding: 6px 12px;
        }

        .upcoming-badge {
            background: linear-gradient(45deg, #F59E0B, #FBBF24);
            color: white;
            animation: glow 2s infinite alternate;
            font-size: 0.875rem;
            font-weight: 800;
            padding: 6px 12px;
        }

        @keyframes pulse {

            0%,
            100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        @keyframes glow {
            0% {
                box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
            }

            100% {
                box-shadow: 0 6px 20px rgba(245, 158, 11, 0.5);
            }
        }

        .past-badge {
            background: linear-gradient(45deg, #6B7280, #9CA3AF);
            color: white;
            font-size: 0.875rem;
            font-weight: 800;
            padding: 6px 12px;
        }

        .result-container {
            /* background: rgba(255, 255, 255, 0.95); */
            backdrop-filter: blur(10px);
            border-radius: 16px;
            /* border: 1px solid rgba(255, 255, 255, 0.2); */
            padding: 24px !important;
        }

        .winning-number {
            color: #374151;
            font-weight: 800;
            letter-spacing: 2px;
            font-size: 1.3rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .winning-number-small {
            color: #374151;
            font-weight: 700;
            letter-spacing: 1px;
            font-size: 1.05rem;
        }

        .prize-row {
            border-radius: 8px;
            transition: all 0.2s ease;
        }

        .prize-row:hover {
            background: rgba(255, 255, 255, 0.8);
        }

        .load-more-btn {
            background: linear-gradient(135deg, #10B981 0%, #059669 100%);
            transition: all 0.3s ease;
            border-radius: 12px;
            font-weight: 600;
            min-height: 44px;
        }

        .load-more-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
        }

        .section-title {
            background: linear-gradient(135deg, #374151 0%, #4B5563 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 800;
        }

        .bounce-in {
            animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        }

        @keyframes bounceIn {
            0% {
                transform: scale(0.3) translateY(50px);
                opacity: 0;
            }

            50% {
                transform: scale(1.05) translateY(-10px);
                opacity: 0.8;
            }

            70% {
                transform: scale(0.95) translateY(0px);
                opacity: 0.9;
            }

            100% {
                transform: scale(1) translateY(0px);
                opacity: 1;
            }
        }

        .card-text {
            color: rgb(255, 255, 255);
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
        }

        .card-text-secondary {
            color: rgb(255, 255, 255);
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        }

        .countdown-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            padding: 16px;
            backdrop-filter: blur(5px);
            margin-top: 16px;
        }

        .countdown-label {
            font-size: 0.9rem;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.9);
        }

        /* Enhanced Font Sizes */
        .card-lottery-name {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 12px;
            line-height: 1.3;
        }

        .card-date {
            font-size: 1rem;
            font-weight: 600;
        }

        .card-prize {
            font-size: 1.125rem;
            font-weight: 700;
        }

        /* Enhanced Card Spacing */
        .card-element-spacing>* {
            margin-bottom: 16px;
        }

        .card-element-spacing>*:last-child {
            margin-bottom: 0;
        }

        /* New Result Card Design */
        .result-card {
            border-radius: 12px;
            overflow: hidden;
            margin-bottom: 16px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .result-card-header {
            background: linear-gradient(135deg, #3B82F6 0%, #1D4ED8 100%);
            color: white;
            padding: 8px 20px;
            font-weight: 700;
            font-size: .96rem;
            text-align: center;
        }

        .result-card-content {
            background: white;
            padding: 16px 20px;
            /* text-align: center; */
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .result-prize-amount {
            font-size: 1.6rem;
            font-weight: 900;
            color: #059669;
            margin-bottom: 8px;
            line-height: 1.2;

        }

        .result-winning-number {
            font-size: 1.5rem;
            font-weight: 700;
            color: #374151;
            /* font-family: poppins; */
            /* font-family: 'Courier New', monospace; */
            font-family: "ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", "Liberation Mono", "Courier New", "monospace";
            letter-spacing: 2px;
            border: 3px solid rgb(229, 229, 229);
            border-radius: 6px;
            background-color: #d9daeb63;
            padding: 0px 12px;
            /* margin-bottom: 12px; */
        }

        .result-location {
            font-size: 0.9rem;
            color: #6B7280;
            font-weight: 500;
        }

        /* Mobile Responsive Design */
        @media (max-width: 768px) {
            .lottery-card {
                padding: 24px !important;
            }

            .result-container {
                padding: 20px !important;
            }

            .countdown-badge {
                min-width: 45px;
                min-height: 45px;
                font-size: 1rem;
            }

            .countdown-container {
                padding: 14px;
            }

            .card-lottery-name {
                font-size: 1.375rem;
            }

            .card-date {
                font-size: 1.1rem;
            }

            .card-prize {
                font-size: 1.075rem;
            }

            .result-prize-amount {
                font-size: 1rem;
            }

            .result-winning-number {
                font-size: 1.6rem;

            }
        }
    </style>
</head>

<body>
    <!-- Header -->
    <header class="app-header text-white sticky top-0 z-50">
        <div class="px-6 py-5">
            <div class="flex items-center justify-center">
                <div class="flex items-center space-x-3">
                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRfvxp4SnnjaYyFQDP8d5D660XMvy4nQfc08ScgqFq3IjufpC1OH-ykrQ6v-SkPsuVCt7w&usqp=CAU"
                        style="height: 34px; width: 34px; border-radius: 50%;" alt="">
                    <h1 class="text-xl font-bold drop-shadow-lg tracking-wide">Bhutan State Lotteries</h1>
                </div>
            </div>
        </div>
    </header>

    <main class="px-4 py-6 space-y-8 max-w-md mx-auto">

         <% 
    // Calculate section order
    const now = new Date();
    let shouldSwapSections = false;
    
    if (todays && todays.length > 0) {
        // Swap if ANY lottery's draw time has passed (no 2-hour delay)
        const anyDrawPassed = todays.some(lottery => {
            const drawTime = new Date(lottery.drawDate);
            return now > drawTime; // Current time is after draw time
        });
        shouldSwapSections = anyDrawPassed;
    }
    %>

    <!-- Conditional section ordering -->
    <% if (!shouldSwapSections) { %>
        <!-- Original order (before draws) -->
        <%- include('partials/todays-results') %>
        <%- include('partials/upcoming-lotteries') %>
    <% } else { %>
        <!-- Swapped order (after draws) -->
        <%- include('partials/upcoming-lotteries') %>
        <%- include('partials/todays-results') %>
    <% } %>
 <%- include('partials/indexScript') %>


        <!-- Past Results -->
        <section>
            <% if(past && past.length>0){ %>
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-xl font-bold section-title flex items-center">
                        <i class="fas fa-history text-purple-500 mr-2 text-xl"></i>
                        View All Results
                    </h2>
                    <!-- <button
                    class="bg-gradient-to-r from-purple-500 to-pink-500 text-white text-sm px-3 py-1 rounded-full font-semibold hover:shadow-lg transition-all">View
                    All</button> -->
                </div>

                <div class="space-y-5" id="past-lottories-container">

                    <% for(let i=0; i < past.length; i++) { %>
                        <div class="lottery-card <%= past[i].dayName %>-card cursor-pointer"
                            onclick="toggleResult('past<%= i %>')">
                            <div class="flex items-center justify-between">
                                <div class="flex-1 card-element-spacing">
                                    <div class="flex items-center flex-wrap"  style="row-gap: 9px; column-gap: 20px;">
                                        <span class="past-badge rounded-full">RESULT</span>
                                        <span class="card-text-secondary card-date">
                                            <%
const drawDate = new Date(past[i].drawDate);
const day = drawDate.getDate();
const month = drawDate.toLocaleString('en-US', { month: 'long' });
const year = drawDate.getFullYear();
let hours = drawDate.getHours();
const minutes = drawDate.getMinutes();
const ampm = hours >= 12 ? 'PM' : 'AM';
hours = hours % 12;
hours = hours ? hours : 12; // Convert 0 to 12
const formattedDate = `${day} ${month} ${year} ${hours}.${minutes.toString().padStart(2, '0')} ${ampm}`;
%>
<%= formattedDate %>
                                        </span>
                                    </div>
                                    <h3 class="card-text card-lottery-name">
                                        <%= past[i].name %>
                                    </h3>
                                    <div class="flex items-center card-text-secondary">
                                        <i class="fas fa-trophy text-yellow-300 mr-2"></i>
                                        <% const firstPrize=past[i].prizes.find(p=> p.rank === 1); %>
                                            <span class="card-prize">1st Prize: ₹<%=
                                                    firstPrize.amount.toLocaleString('en-IN') %></span>
                                    </div>
                                </div>
                                <div class="text-right ml-4">
                                    <i id="arrow-past<%= i %>"
                                        class="fas fa-chevron-down card-text text-xl transition-transform duration-300"></i>
                                </div>
                            </div>

                            <div id="past<%= i %>" class="card-expand collapsed mt-6">
                                <div class="result-container space-y-4">
                                    <% past[i].prizes.forEach(prize=> {
                                        const winner = past[i].winners.find(w => w.prizeRank === prize.rank);
                                        %>
                                        <div class="result-card">
                                            <div class="result-card-header">
                                                <%= prize.rank %> Prize
                                            </div>
                                            <div class="result-card-content">
                                                <div class="result-prize-amount">₹<%=
                                                        prize.amount.toLocaleString('en-IN') %>/-</div>
                                                <% if(winner) { %>
                                                    <div class="result-winning-number">
                                                        <%= winner.ticketNumber %>
                                                    </div>
                                                    <% } else { %>
                                                        <div class="result-winning-number">-</div>
                                                        <% } %>
                                            </div>
                                        </div>
                                        <% }); %>
                                </div>
                            </div>
                        </div>
                        <% } %>

                            <script>
                                function toggleResult(id) {
                                    const element = document.getElementById(id);
                                    const arrow = document.getElementById('arrow-' + id);

                                    element.classList.toggle('collapsed');
                                    arrow.classList.toggle('fa-chevron-down');
                                    arrow.classList.toggle('fa-chevron-up');
                                }
                            </script>

                            <!-- Load More Button -->
                            <button onclick="getPastLottories()" class="load-more-btn w-full text-white py-4 font-semibold flex items-center
                                justify-center space-x-2" id="loadmoreBtn">
                                <i class="fas fa-plus"></i>
                                <span>Load More Results</span>
                            </button>
                            <% } %>
                                <script>
                                    let currentPageNumber = 1;

                                    async function getPastLottories() {


                                        try {
                                            const response = await fetch('/api/get-past-lottories', {
                                                method: 'POST',
                                                headers: {
                                                    'Content-Type': 'application/json'
                                                },
                                                body: JSON.stringify({ page: currentPageNumber + 1 })
                                            });

                                            if (!response.ok) {
                                                throw new Error(`Server responded with status ${response.status}`);
                                            }

                                            const result = await response.json();
                                            console.log(result)
                                            if (!result.success) {
                                                throw new Error(result.message || 'Unknown error occurred');
                                            }
                                            currentPageNumber += 1;


                                            const pastLotteries = result.data.items;
                                            console.log(pastLotteries)
                                            renderPastResults(pastLotteries);

                                            return
                                        } catch (err) {
                                            console.error('Failed to load past lotteries:', err.message);
                                            return
                                            // Optionally show user-friendly error in the UI
                                        }
                                    }
                                </script>
                                <!-- Disclaimer Button -->
                                <div class="text-center py-4 px-4">
                                    <button id="disclaimerBtn"
                                        class="text-sm text-gray-500 hover:text-blue-500 transition-colors duration-300 underline">
                                        View Disclaimer
                                    </button>
                                </div>
                </div>
        </section>
    </main>

    <!-- Disclaimer Modal -->
    <div id="disclaimerModal"
        class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 hidden p-4">
        <div class="bg-white rounded-2xl max-w-md w-full max-h-[80vh] overflow-y-auto shadow-2xl">
            <!-- Modal Header -->
            <div class="sticky top-0 bg-gradient-to-r from-red-500 to-pink-500 text-white p-4 rounded-t-2xl">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-bold">⚠️ DISCLAIMER</h3>
                    <button id="closeModal" class="text-white hover:text-gray-200 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Modal Content -->
            <div class="p-6 text-gray-700 leading-relaxed">
                <p class="mb-4">
                    We strictly recommend you to please visit and browse this site on your own risk. All the information
                    available here is strictly for informational purposes and based on astrology and numerology
                    calculations.
                </p>
                <p class="mb-4">
                    We are no way associated or affiliated with any illegal Matka or gambling business. We abide by
                    rules and regulations of the regions where you are accessing the website.
                </p>
                <p class="mb-4">
                    May be it is illegal or banned in your region. If you are using our website despite ban, you will be
                    solely responsible for the damage or loss occurred or legal action taken.
                </p>
                <p class="mb-4">
                    Please leave our website immediately if you dont like our disclaimer.
                </p>
                <p class="font-semibold text-red-600">
                    Copying any information / content posted on the website is strictly prohibited and against the law.
                </p>
            </div>

            <!-- Modal Footer -->
            <div class="p-4 bg-gray-50 rounded-b-2xl">
                <button id="closeModalBtn"
                    class="w-full bg-gradient-to-r from-gray-500 to-gray-600 text-white py-3 rounded-xl font-medium hover:from-gray-600 hover:to-gray-700 transition-all duration-300">
                    I Understand
                </button>
            </div>
        </div>
    </div>

    <script>
        // Toggle result expansion - Updated to handle all sections
        function toggleResult(resultId) {
            const result = document.getElementById(resultId);
            let arrowId;

            // Determine correct arrow ID based on result ID
            if (resultId.startsWith('result')) {
                arrowId = 'arrow' + resultId.slice(-1);
            } else if (resultId.startsWith('upcoming')) {
                arrowId = 'arrow-' + resultId;
            } else if (resultId.startsWith('past')) {
                arrowId = 'arrow-' + resultId;
            }

            const arrow = document.getElementById(arrowId);

            // Close all other results
            const allResults = document.querySelectorAll('.card-expand');
            const allArrows = document.querySelectorAll('[id^="arrow"]');

            allResults.forEach((el) => {
                if (el.id !== resultId) {
                    el.classList.remove('expanded');
                    el.classList.add('collapsed');
                }
            });

            allArrows.forEach((el) => {
                if (el.id !== arrowId) {
                    el.style.transform = 'rotate(0deg)';
                }
            });

            // Toggle current result
            if (result.classList.contains('collapsed')) {
                result.classList.remove('collapsed');
                result.classList.add('expanded');
                if (arrow) arrow.style.transform = 'rotate(180deg)';
            } else {
                result.classList.remove('expanded');
                result.classList.add('collapsed');
                if (arrow) arrow.style.transform = 'rotate(0deg)';
            }
        }
        // // Countdown timers
        // function updateCountdown(elementPrefix, targetDate) {
        //     const now = new Date().getTime();
        //     const distance = targetDate - now;

        //     if (distance > 0) {
        //         const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        //         const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        //         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        //         const seconds = Math.floor((distance % (1000 * 60)) / 1000);

        //         const daysEl = document.getElementById(elementPrefix + '-days');
        //         const hoursEl = document.getElementById(elementPrefix + '-hours');
        //         const minutesEl = document.getElementById(elementPrefix + '-minutes');
        //         const secondsEl = document.getElementById(elementPrefix + '-seconds');

        //         if (daysEl) daysEl.textContent = days.toString().padStart(2, '0');
        //         if (hoursEl) hoursEl.textContent = hours.toString().padStart(2, '0');
        //         if (minutesEl) minutesEl.textContent = minutes.toString().padStart(2, '0');
        //         if (secondsEl) secondsEl.textContent = seconds.toString().padStart(2, '0');
        //     }
        // }

        // // Initialize countdowns
        // const tomorrow = new Date();
        // tomorrow.setDate(tomorrow.getDate() + 1);
        // tomorrow.setHours(14, 0, 0, 0);

        // const dayAfter = new Date();
        // dayAfter.setDate(dayAfter.getDate() + 2);
        // dayAfter.setHours(14, 0, 0, 0);

        // const threeDaysLater = new Date();
        // threeDaysLater.setDate(threeDaysLater.getDate() + 3);
        // threeDaysLater.setHours(14, 0, 0, 0);

        // // Today's results countdown targets
        // const resultTime1 = new Date();
        // resultTime1.setHours(resultTime1.getHours() + 2, 30, 45, 0);

        // const resultTime2 = new Date();
        // resultTime2.setHours(resultTime2.getHours() + 7, 0, 0, 0);

        // const resultTime3 = new Date();
        // resultTime3.setDate(resultTime3.getDate() + 1);
        // resultTime3.setHours(0, 0, 0, 0);

        // // Update countdowns every second
        // setInterval(() => {
        //     // Upcoming lotteries
        //     updateCountdown('countdown1', tomorrow.getTime());
        //     updateCountdown('countdown2', dayAfter.getTime());
        //     updateCountdown('countdown3', threeDaysLater.getTime());

        //     // Today's results
        //     updateCountdown('result-countdown1', resultTime1.getTime());
        //     updateCountdown('result-countdown2', resultTime2.getTime());
        //     updateCountdown('result-countdown3', resultTime3.getTime());
        // }, 1000);

        // // Initial countdown update
        // updateCountdown('countdown1', tomorrow.getTime());
        // updateCountdown('countdown2', dayAfter.getTime());
        // updateCountdown('countdown3', threeDaysLater.getTime());
        // updateCountdown('result-countdown1', resultTime1.getTime());
        // updateCountdown('result-countdown2', resultTime2.getTime());
        // updateCountdown('result-countdown3', resultTime3.getTime());


        // Add bounce effect to cards when they appear
        window.addEventListener('load', function () {
            const cards = document.querySelectorAll('.lottery-card');
            cards.forEach((card, index) => {
                setTimeout(() => {
                    card.classList.add('bounce-in');
                }, index * 100);
            });
        });

        // Disclaimer Modal Functionality
        document.addEventListener('DOMContentLoaded', function () {
            const disclaimerBtn = document.getElementById('disclaimerBtn');
            const disclaimerModal = document.getElementById('disclaimerModal');
            const closeModal = document.getElementById('closeModal');
            const closeModalBtn = document.getElementById('closeModalBtn');

            // Show modal
            disclaimerBtn.addEventListener('click', function () {
                disclaimerModal.classList.remove('hidden');
                document.body.style.overflow = 'hidden'; // Prevent background scroll
            });

            // Hide modal functions
            function hideModal() {
                disclaimerModal.classList.add('hidden');
                document.body.style.overflow = 'auto'; // Restore scroll
            }

            // Close modal via X button
            closeModal.addEventListener('click', hideModal);

            // Close modal via "I Understand" button
            closeModalBtn.addEventListener('click', hideModal);

            // Close modal when clicking outside
            disclaimerModal.addEventListener('click', function (e) {
                if (e.target === disclaimerModal) {
                    hideModal();
                }
            });

            // Close modal with Escape key
            document.addEventListener('keydown', function (e) {
                if (e.key === 'Escape' && !disclaimerModal.classList.contains('hidden')) {
                    hideModal();
                }
            });
        });
    </script>

    <script>
        function renderPastResults(pastLotteries) {
            const container = document.getElementById('past-lottories-container');
            if (!container) return;

            pastLotteries.forEach((lottery, i) => {
                const drawDate = new Date(lottery.drawDate);
                const formattedDate = drawDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit'
                });

                const firstPrize = lottery.prizes.find(p => p.rank === 1);
                const elementId = `past-${lottery._id}`;

                const card = document.createElement('div');
                card.className = `lottery-card ${lottery.dayName}-card cursor-pointer`;
                card.setAttribute('onclick', `toggleResult('${elementId}')`);

                card.innerHTML = `
      <div class="flex items-center justify-between">
        <div class="flex-1 card-element-spacing">
          <div class="flex flex-wrap items-center"  style="row-gap: 9px; column-gap: 20px;">
            <span class="past-badge rounded-full">RESULT</span>
            <span class="card-text-secondary card-date">${formattedDate}</span>
          </div>
          <h3 class="card-text card-lottery-name">${lottery.name}</h3>
          <div class="flex items-center card-text-secondary">
            <i class="fas fa-trophy text-yellow-300 mr-2"></i>
            <span class="card-prize">1st Prize: ₹${firstPrize.amount.toLocaleString('en-IN')}</span>
          </div>
        </div>
        <div class="text-right ml-4">
          <i id="arrow-${elementId}" class="fas fa-chevron-down card-text text-xl transition-transform duration-300"></i>
        </div>
      </div>

      <div id="${elementId}" class="card-expand collapsed mt-6">
        <div class="result-container space-y-4">
          ${lottery.prizes.map(prize => {
                    const winner = lottery.winners.find(w => w.prizeRank === prize.rank);
                    const amount = `₹${prize.amount.toLocaleString('en-IN')}/-`;
                    const ticketNumber = winner ? winner.ticketNumber : '-';
                    return `
              <div class="result-card">
                <div class="result-card-header">${prize.rank} Prize</div>
                <div class="result-card-content">
                  <div class="result-prize-amount">${amount}</div>
                  <div class="result-winning-number">${ticketNumber}</div>
                </div>
              </div>
            `;
                }).join('')}
        </div>
      </div>
    `;

                // container.appendChild(card);
                let loadmoreBtn = document.getElementById('loadmoreBtn')
                // This will place newCard right before myContainer
                loadmoreBtn.insertAdjacentElement('beforebegin', card);
            });
        }

    </script>
</body>

</html>