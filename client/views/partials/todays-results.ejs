<style>
    /* Add these new badge styles */
.next-draw-badge {
    background: linear-gradient(45deg, #10B981, #34D399);
    color: white;
    animation: pulse 2s infinite;
    font-size: 0.875rem;
    font-weight: 800;
    padding: 6px 12px;
}

.refresh-btn {
    background: linear-gradient(135deg, #F59E0B 0%, #F97316 100%);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 8px 16px;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.refresh-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
}

.refresh-btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

</style>

<!-- partials/todays-results.ejs -->
<% if (todays && todays.length > 0) { %>
<section>
    <div class="flex items-center justify-between mb-6">
        <h2 class="text-xl font-bold section-title flex items-center">
            <i class="fas fa-calendar-day text-blue-500 mr-2 text-xl"></i>
            Today's Results
        </h2>
        <span class="bg-gradient-to-r from-blue-500 to-purple-500 text-white text-sm px-3 py-1 rounded-full font-semibold">
            <%= todays.length %> Results
        </span>
    </div>

    <div class="space-y-6">
        <% todays.forEach((lottery, index) => { 
            // Step 3a: Calculate lottery status
            const drawTime = new Date(lottery.drawDate);
            const now = new Date();
            const hoursAfterDraw = (now - drawTime) / (1000 * 60 * 60);
            
            let status, badgeClass, showCountdown = false, showRefresh = false;
            
            if (now < drawTime) {
                // Before draw time
                status = "NEXT DRAW";
                badgeClass = "upcoming-badge";
                showCountdown = true;
            } else if (hoursAfterDraw <= 2) {
                // Draw time to +2 hours
                status = "LIVE";
                badgeClass = "live-badge";
                showCountdown = false;
                showRefresh = lottery.winners.length !== lottery.prizes.length ;
            } else {
                // After +2 hours
                status = "RESULT";
                badgeClass = "result-badge";
                showCountdown = false;
                showRefresh = false ;
            }
          
            const firstPrize = lottery.prizes.find(p => p.rank === 1);
            const formatDate = (isoDateString) => {
            const date = new Date(isoDateString);

    const options = {
      timeZone: 'Asia/Thimphu',
      year: 'numeric',
      month: 'short',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      hour12: true
    };

    // Use Intl.DateTimeFormat directly for better control
    const formatter = new Intl.DateTimeFormat('en-GB', options);
    return formatter.format(date).replace(',', '');
  };

  const formattedDate = formatDate(lottery.drawDate);
        %>
        
        <!-- Step 3b: Render lottery card -->
        <div class="lottery-card <%= lottery.dayName %>-card cursor-pointer" onclick="toggleResult('today<%= index %>')">
            <div class="flex items-center justify-between">
                <div class="flex-1 card-element-spacing">
                    <!-- Status badge -->
                    <div class="flex flex-wrap items-center"  style="row-gap: 9px; column-gap: 20px;">
                        <span class="<%= badgeClass %> rounded-full"><%= status %></span>
                        <span class="card-text-secondary card-date"><%= formattedDate %></span>
                    </div>
                    
                    <!-- Lottery name -->
                    <h3 class="card-text card-lottery-name"><%= lottery.name %></h3>
                    
                    <!-- Prize info -->
                    <div class="flex items-center card-text-secondary">
                        <i class="fas fa-trophy text-yellow-300 mr-2"></i>
                        <span class="card-prize">1st Prize: ₹<%= firstPrize.amount.toLocaleString('en-IN') %></span>
                    </div>

                    <!-- Step 3c: Conditional countdown timer -->
                    <% if (showCountdown) { %>
                    <div class="countdown-container">
                        <div class="flex items-center justify-between">
                            <span class="countdown-label">Draws in:</span>
                            <div class="flex space-x-2 items-center">
                                <div class="countdown-badge" id="today-countdown<%= index %>-hours">00</div>
                                <span class="card-text font-bold">:</span>
                                <div class="countdown-badge" id="today-countdown<%= index %>-minutes">00</div>
                                <span class="card-text font-bold">:</span>
                                <div class="countdown-badge" id="today-countdown<%= index %>-seconds">00</div>
                            </div>
                        </div>
                    </div>
                    <% } %>

                    <!-- Step 3d: Conditional refresh button -->
                    <% if (showRefresh) { %>
                    <div class="mt-4 text-center">
                        <button onclick="refreshResults('<%= lottery._id %>')" class="refresh-btn" id="refresh-<%= lottery._id %>">
                            <i class="fas fa-sync-alt mr-1"></i>
                            Refresh Results
                        </button>
                    </div>
                    <% } %>
                </div>
                <div class="text-right ml-4">
                    <i id="arrow-today<%= index %>" class="fas fa-chevron-down card-text text-xl transition-transform duration-300"></i>
                </div>
            </div>

            <!-- Step 3e: Expandable results -->
            <div id="today<%= index %>" class="card-expand collapsed mt-6">
                <div class="result-container space-y-4">
                    <% lottery.prizes.forEach(prize => {
                        const winner = lottery.winners.find(w => w.prizeRank === prize.rank);
                    %>
                    <div class="result-card">
                        <div class="result-card-header"><%= prize.rank %> Prize</div>
                        <div class="result-card-content">
                            <div class="result-prize-amount">₹<%= prize.amount.toLocaleString('en-IN') %>/-</div>
                            <% if (winner) { %>
                            <div class="result-winning-number"><%= winner.ticketNumber %></div>
                            <% } else { %>
                            <div class="result-winning-number">_ _ _ _ _</div>
                            <% } %>
                        </div>
                    </div>
                    <% }); %>
                </div>
            </div>
        </div>
        <% }); %>
    </div>
</section>
<% } %>